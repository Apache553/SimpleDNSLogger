#include "Main.h"#include "Rpc.h"#include "DnsServer.h"#include <iostream>int main(){    //const char buffer[] = "\x51\xc0\x85\x00\x00\x01\x00\x02\x00\x00\x00\x01\x04\x62\x6c\x6f" \    //	"\x67\x09\x61\x70\x61\x63\x68\x65\x35\x35\x33\x03\x63\x6f\x6d\x00" \    //	"\x00\x01\x00\x01\xc0\x0c\x00\x01\x00\x01\x00\x00\x01\x2c\x00\x04" \    //	"\x68\x15\x59\xb7\xc0\x0c\x00\x01\x00\x01\x00\x00\x01\x2c\x00\x04" \    //	"\xac\x43\xbe\x8f\x00\x00\x29\x04\xd0\x00\x00\x00\x00\x00\x00";    //// SimpleDNSLogger::PacketReader reader(buffer, sizeof(buffer));    //SimpleDNSLogger::DnsPacket packet;    //packet.FromBuffer(buffer, sizeof(buffer));    //std::cout << "Hello CMake." << std::endl;    char buffer[512] = {};    SimpleDNSLogger::PacketWriter writer(buffer, sizeof(buffer));    auto label1 = std::vector<std::string>{"fuck1", "fuck2", "com"};    auto label2 = std::vector<std::string>{"fuck3", "fuck2", "com"};    auto label3 = std::vector<std::string>{"fuck5", "fuck3", "fuck2", "com"};    writer.WriteLabels(label1);    writer.WriteLabels(label2);    writer.WriteLabels(label3);    SimpleDNSLogger::DnsServer server("0.0.0.0", 5588);    server.Run(true);    return 0;}